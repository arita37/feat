#!/bin/bash
# ===
# Configuration Options:
# ./configure : builds a release version of feat.
# ./configure tests: builds a release version of feat and the tests.
# ./configure debug : builds a debug version of feat.
# ./configure profile: build a version of feat use with profiling tools. 
# ===

# add some environment variables
# if you are not using conda, these paths should be changed
# to point to the locations of the dependencies.
export SHOGUN_LIB=$CONDA_PREFIX/lib/
export SHOGUN_DIR=$CONDA_PREFIX/include/
export EIGEN3_INCLUDE_DIR=$CONDA_PREFIX/include/eigen3/

# configuration options
SHOGUN_KNOWN=ON
EIGEN_KNOWN=ON
OMP=ON
EXTRA_FLAGS=""
BUILD_DIR="build"

# check if directories exist
if [ ! -d "$SHOGUN_LIB" ]; then
    echo "WARNING: SHOGUN_LIB path ($SHOGUN_LIB) does not exist."
    echo "CMake will try to find it."
    SHOGUN_KNOWN=OFF    
fi

if [ ! -d "$SHOGUN_DIR" ]; then
    echo "WARNING: SHOGUN_DIR path ($SHOGUN_DIR) does not exist."
    echo "CMake will try to find it."
    SHOGUN_KNOWN=OFF    
fi

if [ ! -d "$EIGEN3_INCLUDE_DIR" ]; then
    echo "WARNING: SHOGUN_LIB path ($EIGEN3_INCLUDE_DIR) does not exist."
    echo "CMake will try to find it."
    EIGEN_KNOWN=OFF    
fi

if [ "$1" == "debug" ]; then
    BUILD_DIR="debug"
    OMP=OFF
    EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug"
elif [ "$1" == "profile" ]; then
    BUILD_DIR="profile"
    EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=-p -DCMAKE_CXX_FLAGS=-O2"
elif [ "$1" == "lpc" ] ; then
    # set up LPC environment
    module load gcc/5.2.0
    OMP=OFF
elif [ "$1" == "lpc_cuda" ] ; then
    # set up LPC environment
    module load gcc/5.2.0
    BUILD_DIR="buildGPU"
    OMP=OFF
    EXTRA_FLAGS="-DCORE_USE_CUDA=ON"
elif [ "$1" == "tests" ] ; then 
    EXTRA_FLAGS="-DTEST=ON"
elif [ "$1" == "gpu" ] ; then
    BUILD_DIR="buildGPU"
    EXTRA_FLAGS="-DCORE_USE_CUDA=ON"
fi

echo "SHOGUN_KNOWN = $SHOGUN_KNOWN"
echo "EIGEN_KNOWN = $EIGEN_KNOWN"
echo "OMP = $OMP"
echo "EXTRA_FLAGS = $EXTRA_FLAGS"
echo "BUILD_DIR = $BUILD_DIR"

#Run CMAKE
rm -rf $BUILD_DIR; mkdir $BUILD_DIR; cd $BUILD_DIR; 
cmake -DSHOGUN_DIR=$SHOGUN_KNOWN -DEIGEN_DIR=$EIGEN_KNOWN -DOMP=$OMP $EXTRA_FLAGS ..
cd ..
